/**
 * Main CAmkES configuration file of the exercise demo application.
 *
 * Copyright (C) 2021-2023, Hensoldt Cyber GmbH
 */

import <std_connector.camkes>;

#include "system_config.h"

#include "UART/Uart.camkes"


//----------------------------------------------------------------------
// TimeServer
//----------------------------------------------------------------------

#include "TimeServer/camkes/TimeServer.camkes"
TimeServer_COMPONENT_DEFINE(TimeServer)

//----------------------------------------------------------------------
// Network
//----------------------------------------------------------------------

//#include "plat_nic.camkes"

//----------------------------------------------------------------------
// Network Stack
//----------------------------------------------------------------------

//----------------------------------------------------------------------

#include "ChanMux/ChanMux_UART.camkes"
ChanMux_UART_COMPONENT_DEFINE(ChanMux_UART,
                              nic_ChanMux,
                              ctrl, nic_ChanMux, data)

//UART_COMPONENT_DEFINE(UART_0, {"path":"/amba/serial@e0000000"})



#include "NIC_ChanMux/NIC_ChanMux.camkes"
NIC_ChanMux_COMPONENT_DEFINE(NIC_ChanMux, NIC_DRIVER_RINGBUFFER_SIZE)





//----------------------------------------------------------------------
#include "NetworkStack_PicoTcp/camkes/NetworkStack_PicoTcp.camkes"

NetworkStack_PicoTcp_COMPONENT_DEFINE(
    NetworkStack_PicoTcp,
    NIC_DRIVER_RINGBUFFER_SIZE,
    NetworkStack_PicoTcp_NO_ADDITIONAL_INTERFACES)

#include "components/TestApp/TestApp.camkes";

//----------------------------------------------------------------------
// System
//----------------------------------------------------------------------

assembly {
    composition {
        component ChanMux_UART chanMux_UART;
        component UART_0 uart;
        component NIC_ChanMux nic_ChanMux;
        component NetworkStack_PicoTcp    nwStack;

        ChanMux_UART_INSTANCE_CONNECT(
            chanMux_UART,
            uart
        )
        // ?
        ChanMux_UART_INSTANCE_CONNECT_CLIENT(
            chanMux_UART,
            nic_ChanMux, ctrl, data
        )


        IF_OS_NIC_CONNECT(
            nic_ChanMux,
            nic,
            nwStack,
            nic,
            event_tick_or_data
        )





        //----------------------------------------------------------------------
        // TimeServer
        //----------------------------------------------------------------------
        component TimeServer timeServer;

        TimeServer_INSTANCE_CONNECT_CLIENTS(
            timeServer,
            //EXERCISE_DEMO_NIC_CONNECTION_TIMESERVER(nwDriver)
            nwStack.timeServer_rpc, nwStack.timeServer_notify
        )

        //----------------------------------------------------------------------
        // Network Driver
        //----------------------------------------------------------------------

        //EXERCISE_DEMO_NIC_INSTANCE(nwDriver)
        //component NwDriver nwDriver;

        //ChanMux_UART_INSTANCE_CONNECT_CLIENT(
          //  chanMux_UART,
           // nwDriver, data, ctrl
        //)

        //----------------------------------------------------------------------
        // Network Stack
        //----------------------------------------------------------------------
        

        //NetworkStack_PicoTcp_INSTANCE_CONNECT(
          //  nwStack,
            //nic_ChanMux
        //)

        component   TestApp      testApp;

        NetworkStack_PicoTcp_INSTANCE_CONNECT_CLIENTS(
            nwStack,
            testApp, networkStack
        )
        
       
        
    }

    configuration {
        TimeServer_CLIENT_ASSIGN_BADGES(
            //EXERCISE_DEMO_NIC_TIMESERVER_CLIENTS(nwDriver)
            nwStack.timeServer_rpc
        )

        //EXERCISE_DEMO_NIC_CONFIG(nwDriver)

        NetworkStack_PicoTcp_CLIENT_ASSIGN_BADGES(
            testApp, networkStack
        )

        NetworkStack_PicoTcp_INSTANCE_CONFIGURE_CLIENTS(
            nwStack,
           2
        )

        ChanMux_UART_CLIENT_ASSIGN_BADGES( 
            nic_ChanMux.chanMux_Rpc
        )

    }
}