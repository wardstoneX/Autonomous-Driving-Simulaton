#include <if_OS_Entropy.camkes>
#include "if_Crypto.camkes"
#include "if_KeyStore.camkes"
#include "if_TPMctrl.camkes"

/* Copied from RPi_SPI_Flash */
#define WOLFTPM_BCM2837_DATAPORT_PADDR	0x3F200000
#define WOLFTPM_BCM2837_DATAPORT_SIZE	0x8000

component WolfTPM {
  provides	if_OS_Entropy	entropy_rpc;
  dataport	Buf		entropy_port;

  provides	if_KeyStore	keystore_rpc;
  dataport	Buf		keystore_port;

  provides	if_Crypto	crypto_rpc;
  dataport	Buf		crypto_port;

  provides	if_TPMctrl	tpm_ctrl_rpc;

  /* For talking to the hardware */
  dataport	Buf(WOLFTPM_BCM2837_DATAPORT_SIZE)	regBase;
};

component WolfTPM_HW {
  hardware;
  dataport	Buf(WOLFTPM_BCM2837_DATAPORT_SIZE)	regBase;
};

#define WolfTPM_HW_CONNECT(_inst_, _inst_hw_) \
  connection seL4HardwareMMIO TPM_mmio( \
    from _inst_.regBase, \
    to _inst_hw_.regBase \
  );

#define WolfTPM_HW_CONFIGURE_SELF(_inst_) \
  _inst_.regBase_paddr	= WOLFTPM_BCM2837_DATAPORT_PADDR; \
  _inst_.regBase_size	= WOLFTPM_BCM2837_DATAPORT_SIZE;

#define WolfTPM_INSTANCE_CONNECT_CLIENT(\
  _inst_,\
  _Erpc_, _Eport_,\
  _Krpc_, _Kport_, \
  _Crpc_, _Cport_, \
  _Trpc_) \
  \
  EntropySource_INSTANCE_CONNECT_CLIENT(_inst_, _Erpc_, _Eport_)\
  connection seL4RPCCall _inst_ ## _keystore_rpc(\
      from	_Krpc_,\
      to	_inst_.keystore_rpc\
  ); \
  connection seL4SharedData _inst_ ## _keystore_port(\
      from	_Kport_,\
      to	_inst_.keystore_port\
  ); \
  connection seL4RPCCall _inst_ ## _crypto_rpc(\
      from	_Crpc_,\
      to	_inst_.crypto_rpc\
  ); \
  connection seL4SharedData _inst_ ## _crypto_port(\
      from	_Cport_,\
      to	_inst_.crypto_port\
  ); \
  connection seL4RPCCall _inst_ ## _tpm_ctrl_rpc(\
      from	_Trpc_,\
      to	_inst_.tpm_ctrl_rpc\
  );
